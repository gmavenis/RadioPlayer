<?xml version="1.0" encoding="UTF-8"?>
<project name="AACPlayer" default="all">

	<!-- The local.properties file is created and updated by the 'android' tool.
		 It contains the path to the SDK. It should *NOT* be checked in in Version
		 Control Systems. -->
	<property file="local.properties" />

	<!-- The .ant.properties file is created and updated MANUALLY.
		 It contains the path to the NDK. It should *NOT* be checked in in Version
		 Control Systems. -->
	<property file=".ant.properties" />

	<fail unless="ndk.home">
		Missing property.
		The property 'ndk.home' is not set. It should point to Android NDK home dir.
		Please add it to your '.ant.properties' file.
	</fail>

	<fail unless="aac.decoders">
		Missing property.
		The property 'aac.decoders' is not set. It should contain a list of jni modules.
		Please add it to your '.ant.properties' file.
	</fail>

	<fail unless="jni.loglevel">
		Missing property.
		The property 'jni.loglevel' is not set. It should contain the target loglevel.
		Please add it to your '.ant.properties' file.
	</fail>

	<!-- The build.properties file can be created by you and is never touched
		 by the 'android' tool. This is the place to change some of the default property values
		 used by the Ant rules.
		 Here are some properties you may want to change/update:

		 application.package
			 the name of your application package as defined in the manifest. Used by the
			 'uninstall' rule.
		 source.dir
			 the name of the source directory. Default is 'src'.
		 out.dir
			 the name of the output directory. Default is 'bin'.

		 Properties related to the SDK location or the project target should be updated
		  using the 'android' tool with the 'update' action.

		 This file is an integral part of the build system for your application and
		 should be checked in in Version Control Systems.

		 -->
	<property file="build.properties" />

	<!-- The default.properties file is created and updated by the 'android' tool, as well
		 as ADT.
		 This file is an integral part of the build system for your application and
		 should be checked in in Version Control Systems. -->
	<property file="default.properties" />

	<!-- Custom Android task to deal with the project target, and import the proper rules.
		 This requires ant 1.6.0 or above. -->
	<path id="android.antlibs">
		<pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
		<pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
		<pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
		<pathelement path="${sdk.dir}/tools/lib/apkbuilder.jar" />
		<pathelement path="${sdk.dir}/tools/lib/jarutils.jar" />
	</path>

	<taskdef name="setup"
		classname="com.android.ant.SetupTask"
		classpathref="android.antlibs" />

	<!-- Execute the Android Setup task that will setup some properties specific to the target,
		 and import the build rules files.

		 The rules file is imported from
			<SDK>/platforms/<target_platform>/templates/android_rules.xml

		 To customize some build steps for your project:
		 - copy the content of the main node <project> from android_rules.xml
		 - paste it in this build.xml below the <setup /> task.
		 - disable the import by changing the setup task below to <setup import="false" />

		 This will ensure that the properties are setup correctly but that your customized
		 build steps are used.
	-->
	<setup />


	<target name="native" depends="compile" description="Builds native libs">
		<exec executable="${ndk.home}/ndk-build" failonerror="true">
			<arg line="${make.options}"/>
		</exec>
	</target>

	<target name="mrproper" depends="clean" description="Clears all including the JNI objects.">
		<exec executable="${ndk.home}/ndk-build">
			<arg value="clean"/>
		</exec>
	</target>

	<target name="all" depends="native,debug" description="Builds everything - debug mode">
	</target>

</project>
